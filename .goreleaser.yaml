# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...

report_sizes: true

# gomod:
#   proxy: true
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

builds:
  - main: ./webdemo.go
    env:
      - CGO_ENABLED=0 # 禁用 CGO
    
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath # 优化二进制大小。
    ldflags:
      - -s -w  -X webdemo/appinfo.BuiltBy=goreleaser
      - -X webdemo/appinfo.Tag={{ .Tag }}
      - -X webdemo/appinfo.Date={{ .Date }}
      - -X webdemo/appinfo.Commit={{ .FullCommit }}
      - -X webdemo/appinfo.TreeState={{ .Branch }}
      # - -X main.Arch={{ .Arch }}
      # - -X main.Os={{ .Os }}
      # {{.名称模板}} https://goreleaser.com/customization/templates/#common-fields

    # gcflags:
    #   - all=-N -l
    goos:
      - linux
      - windows
      # - darwin
      # - android
    goarch:
      # - "386"
      - amd64
      # - arm
      # - arm64
      # - loong64
      - mipsle
      # - mips
      # - mips64
      # - mips64le
    gomips:
      # - hardfloat
      - softfloat
    ignore:
      # we only need the arm64 build on android
      # - goos: android
      #   goarch: arm
      - goos: windows
        goarch: mipsle

# universal_binaries:
#   - replace: false # 禁用生成通用 macOS 二进制文件。

upx: #压缩编译后的二进制文件大小
  - # Whether to enable it or not.
    #
    # Templates: allowed (since v1.21)
    enabled: true

    # Filter by build ID.
    # ids: [build1, build2]

    # Filter by GOOS.
    goos: [linux]

    # Filter by GOARCH.
    goarch: [mipsle]

    # Filter by GOARM.
    # goarm: [8]

    # Filter by GOAMD64.
    # goamd64: [v1]
    
    # Compress argument.
    # Valid options are from '1' (faster) to '9' (better), and 'best'.
    compress: best

    # Whether to try LZMA (slower).
    lzma: true

    # Whether to try all methods and filters (slow).
    brute: true


# signs:
#   - artifacts: checksum

checksum:
  name_template: "checksums.txt"
  # Algorithm to be used.
  #
  # Accepted options are:
  # - sha256
  # - sha512
  # - sha1
  # - crc32
  # - md5
  # - sha224
  # - sha384
  # - sha3-256
  # - sha3-512
  # - sha3-224
  # - sha3-384
  # - blake2s
  # - blake2b
  #
  # Default: 'sha256'.
  algorithm: sha256

  # If true, will create one checksum file for each artifact.
  split: false
  # IDs of artifacts to include in the checksums file.
  #
  # If left empty, all published binaries, archives, linux packages and source archives
  # are included in the checksums file.
  # ids:
  #   - foo
  #   - bar

  # Disable the generation/upload of the checksum file.
  # disable: true
snapshot:
  version_template: "{{ .Version }}-SNAPSHOT-{{.ShortCommit}}"
archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "arm64" }}aarch64
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
  
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"